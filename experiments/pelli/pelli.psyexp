<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="1.85.3">
  <Settings>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="color" updates="None" val="black" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="Experiment info" updates="None" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
    <Param name="Units" updates="None" val="use prefs" valType="str"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="False" valType="bool"/>
    <Param name="Window size (pixels)" updates="None" val="[1680, 1050]" valType="code"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="OSF Project ID" updates="None" val="" valType="str"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Data filename" updates="None" val="u'data' + os.sep + '%s_%s' % (expInfo['participant'], expInfo['date'])" valType="code"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="expName" updates="None" val="gabore" valType="str"/>
    <Param name="logging level" updates="None" val="warning" valType="code"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <ImageComponent name="stimulus">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="constant" val="stimulus" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="stopVal" updates="constant" val="7.0" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="none" valType="str"/>
        <Param name="pos" updates="set every repeat" val="$[0, offset]" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="image" updates="set every repeat" val="'images/'+$image" valType="str"/>
        <Param name="size" updates="constant" val="[200,200]" valType="code"/>
      </ImageComponent>
      <KeyboardComponent name="resp">
        <Param name="correctAns" updates="constant" val="$corrAns" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="resp" valType="code"/>
        <Param name="stopVal" updates="constant" val="7.0" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="allowedKeys" updates="constant" val="'s', 'h'" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instrMain">
      <TextComponent name="instr2">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="constant" val="instr2" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="OK, ready to start the main experiment?&amp;#10;&amp;#10;Remember, press;&amp;#10; - 'S' if the SMALL letters are S&amp;#10; - 'H' if the SMALL letters are H&amp;#10;&amp;#10;Try to respond as quickly and as accurately as possible.&amp;#10;&amp;#10;When you are ready to proceed press any key." valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="ok2">
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="ok2" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="allowedKeys" updates="constant" val="" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="thanks">
      <TextComponent name="thanksMsg">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="constant" val="thanksMsg" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="text" updates="constant" val="You're done! Fun, wasn't it!? ;-)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2.0" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="instrPractice">
      <TextComponent name="instruct1">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="constant" val="instruct1" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="In this experiment you will be presented with a large letter made up of smaller letters. Your task is to&amp;#10;&amp;#10;Respond by pressing;&amp;#10; - 'S' if the SMALL letters are S&amp;#10; - 'H' if the SMALL letters are H&amp;#10;&amp;#10;Try to respond as quickly and as accurately as possible.&amp;#10;&amp;#10;There will be a number of practice trials in which you will be given feedback. &amp;#10;&amp;#10;Press any key when you are ready to proceed." valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="ok1">
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="ok1" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="allowedKeys" updates="constant" val="" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="instrPractice"/>
    <LoopInitiator loopType="TrialHandler" name="practiceTrials">
      <Param name="conditionsFile" updates="None" val="conditions.xlsx" valType="str"/>
      <Param name="name" updates="None" val="practiceTrials" valType="code"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="endPoints" updates="None" val="[1, 2]" valType="num"/>
      <Param name="conditions" updates="None" val="[{u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 2, u'image': u'gabore-02-02.png', u'offset': 0, u'viewing_distance': 12, u'sd': 2, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 2, u'image': u'gabore-02-02.png', u'offset': 5, u'viewing_distance': 12, u'sd': 2, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 2, u'image': u'gabore-02-02.png', u'offset': 10, u'viewing_distance': 12, u'sd': 2, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 40, u'image': u'gabore-02-40.png', u'offset': 0, u'viewing_distance': 12, u'sd': 2, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 40, u'image': u'gabore-02-40.png', u'offset': 5, u'viewing_distance': 12, u'sd': 2, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 40, u'image': u'gabore-02-40.png', u'offset': 10, u'viewing_distance': 12, u'sd': 2, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 70, u'image': u'gabore-02-70.png', u'offset': 0, u'viewing_distance': 12, u'sd': 2, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 70, u'image': u'gabore-02-70.png', u'offset': 5, u'viewing_distance': 12, u'sd': 2, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 70, u'image': u'gabore-02-70.png', u'offset': 10, u'viewing_distance': 12, u'sd': 2, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 2, u'image': u'gabore-12-02.png', u'offset': 0, u'viewing_distance': 12, u'sd': 12, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 2, u'image': u'gabore-12-02.png', u'offset': 5, u'viewing_distance': 12, u'sd': 12, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 2, u'image': u'gabore-12-02.png', u'offset': 10, u'viewing_distance': 12, u'sd': 12, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 40, u'image': u'gabore-12-40.png', u'offset': 0, u'viewing_distance': 12, u'sd': 12, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 40, u'image': u'gabore-12-40.png', u'offset': 5, u'viewing_distance': 12, u'sd': 12, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 40, u'image': u'gabore-12-40.png', u'offset': 10, u'viewing_distance': 12, u'sd': 12, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 70, u'image': u'gabore-12-70.png', u'offset': 0, u'viewing_distance': 12, u'sd': 12, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 70, u'image': u'gabore-12-70.png', u'offset': 5, u'viewing_distance': 12, u'sd': 12, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 70, u'image': u'gabore-12-70.png', u'offset': 10, u'viewing_distance': 12, u'sd': 12, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 2, u'image': u'gabore-24-02.png', u'offset': 0, u'viewing_distance': 12, u'sd': 24, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 2, u'image': u'gabore-24-02.png', u'offset': 5, u'viewing_distance': 12, u'sd': 24, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 2, u'image': u'gabore-24-02.png', u'offset': 10, u'viewing_distance': 12, u'sd': 24, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 40, u'image': u'gabore-24-40.png', u'offset': 0, u'viewing_distance': 12, u'sd': 24, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 40, u'image': u'gabore-24-40.png', u'offset': 5, u'viewing_distance': 12, u'sd': 24, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 40, u'image': u'gabore-24-40.png', u'offset': 10, u'viewing_distance': 12, u'sd': 24, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 70, u'image': u'gabore-24-70.png', u'offset': 0, u'viewing_distance': 12, u'sd': 24, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 70, u'image': u'gabore-24-70.png', u'offset': 5, u'viewing_distance': 12, u'sd': 24, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 70, u'image': u'gabore-24-70.png', u'offset': 10, u'viewing_distance': 12, u'sd': 24, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}]" valType="str"/>
      <Param name="Selected rows" updates="None" val="" valType="str"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <LoopTerminator name="practiceTrials"/>
    <Routine name="instrMain"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="conditionsFile" updates="None" val="conditions.xlsx" valType="str"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="conditions" updates="None" val="[{u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 2, u'image': u'gabore-02-02.png', u'offset': 0, u'viewing_distance': 12, u'sd': 2, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 2, u'image': u'gabore-02-02.png', u'offset': 5, u'viewing_distance': 12, u'sd': 2, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 2, u'image': u'gabore-02-02.png', u'offset': 10, u'viewing_distance': 12, u'sd': 2, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 40, u'image': u'gabore-02-40.png', u'offset': 0, u'viewing_distance': 12, u'sd': 2, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 40, u'image': u'gabore-02-40.png', u'offset': 5, u'viewing_distance': 12, u'sd': 2, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 40, u'image': u'gabore-02-40.png', u'offset': 10, u'viewing_distance': 12, u'sd': 2, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 70, u'image': u'gabore-02-70.png', u'offset': 0, u'viewing_distance': 12, u'sd': 2, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 70, u'image': u'gabore-02-70.png', u'offset': 5, u'viewing_distance': 12, u'sd': 2, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 70, u'image': u'gabore-02-70.png', u'offset': 10, u'viewing_distance': 12, u'sd': 2, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 2, u'image': u'gabore-12-02.png', u'offset': 0, u'viewing_distance': 12, u'sd': 12, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 2, u'image': u'gabore-12-02.png', u'offset': 5, u'viewing_distance': 12, u'sd': 12, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 2, u'image': u'gabore-12-02.png', u'offset': 10, u'viewing_distance': 12, u'sd': 12, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 40, u'image': u'gabore-12-40.png', u'offset': 0, u'viewing_distance': 12, u'sd': 12, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 40, u'image': u'gabore-12-40.png', u'offset': 5, u'viewing_distance': 12, u'sd': 12, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 40, u'image': u'gabore-12-40.png', u'offset': 10, u'viewing_distance': 12, u'sd': 12, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 70, u'image': u'gabore-12-70.png', u'offset': 0, u'viewing_distance': 12, u'sd': 12, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 70, u'image': u'gabore-12-70.png', u'offset': 5, u'viewing_distance': 12, u'sd': 12, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 70, u'image': u'gabore-12-70.png', u'offset': 10, u'viewing_distance': 12, u'sd': 12, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 2, u'image': u'gabore-24-02.png', u'offset': 0, u'viewing_distance': 12, u'sd': 24, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 2, u'image': u'gabore-24-02.png', u'offset': 5, u'viewing_distance': 12, u'sd': 24, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 2, u'image': u'gabore-24-02.png', u'offset': 10, u'viewing_distance': 12, u'sd': 24, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 40, u'image': u'gabore-24-40.png', u'offset': 0, u'viewing_distance': 12, u'sd': 24, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 40, u'image': u'gabore-24-40.png', u'offset': 5, u'viewing_distance': 12, u'sd': 24, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 40, u'image': u'gabore-24-40.png', u'offset': 10, u'viewing_distance': 12, u'sd': 24, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 70, u'image': u'gabore-24-70.png', u'offset': 0, u'viewing_distance': 12, u'sd': 24, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 70, u'image': u'gabore-24-70.png', u'offset': 5, u'viewing_distance': 12, u'sd': 24, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}, {u'screenpixelsize': 0.282, u'fieldwidth': 100, u'downsampledfieldwidth': 0, u'flankdistance': 70, u'image': u'gabore-24-70.png', u'offset': 10, u'viewing_distance': 12, u'sd': 24, u'sigma': 0.012, u'K': 4.6, u'fieldheight': 10, u'downsampledfield_height': 0}]" valType="str"/>
      <Param name="Selected rows" updates="None" val="" valType="str"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <LoopTerminator name="trials"/>
    <Routine name="thanks"/>
  </Flow>
</PsychoPy2experiment>
